{
	"info": {
		"_postman_id": "26b6077f-c432-49a8-8e34-12815f6bf5c5",
		"name": "Update Password",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29221157"
	},
	"item": [
		{
			"name": "Missing Field Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 for missing fields\", () => {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Proper error message for missing info\", () => {",
							"    const body = pm.response.json();",
							"    pm.expect(body).to.have.property(\"message\", \"Missing required information\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"acc_info\": \"user@example.com\",\n  \"oldpass\": \"OldPassword123\",\n  \"newpass\": \"BrandNewPass!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/c/update_password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"c",
						"update_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Old Same As New Password Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 when new password equals old\", () => {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message for same current and new password\", () => {",
							"    const body = pm.response.json();",
							"    pm.expect(body).to.have.property(",
							"        \"message\",",
							"        \"New password must be different from current password\"",
							"    );",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"acc_info\": \"user@example.com\",\n  \"oldpass\": \"UnchangedPass1\",\n  \"newpass\": \"UnchangedPass1\",\n  \"newpass_retype\": \"UnchangedPass1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/c/update_password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"c",
						"update_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retype Doesn't Match Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 when passwords don't match\", () => {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message for password mismatch\", () => {",
							"    const body = pm.response.json();",
							"    pm.expect(body).to.have.property(",
							"        \"message\",",
							"        \"New password and retyped password don't match\"",
							"    );",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"acc_info\": \"user@example.com\",\n  \"oldpass\": \"UnchangedPass1\",\n  \"newpass\": \"UnchangePass1\",\n  \"newpass_retype\": \"UnchangedPass1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/c/update_password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"c",
						"update_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid New Password Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 - Invalid Password\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"    pm.expect(pm.response.json().message).to.eql(\"Invalid new password - please refer to documentation\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"acc_info\": \"john1@example.com\",\r\n    \"oldpass\": \"SecurePass123!\",\r\n    \"newpass\": \"NewInvalidPass123\",\r\n    \"newpass_retype\": \"NewInvalidPass123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/c/update_password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"c",
						"update_password"
					]
				}
			},
			"response": []
		}
	]
}